#include <TinyGPS++.h>
#include <HardwareSerial.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP3XX.h>
#include <Adafruit_MPU6050.h>
#include <SPI.h>
#include <RF24.h>

// NRF24L01 setup
RF24 radio(4,5);
const byte address[6] = "00001";

// GPS Module setup
const int rxPin = 16;
const int txPin = 17;
const uint32_t GPSBaud = 9600;
TinyGPSPlus gps;
HardwareSerial GPS_Serial(2);

// Barometer (BMP388) setup
#define SEALEVELPRESSURE_HPA (1013.25)
Adafruit_BMP3XX bmp;

// Gyroscope (MPU6050) setup
Adafruit_MPU6050 mpu;

// Data structure
struct SensorData {
  float latitude;
  float longitude;
  float speed;
  float pressure;
  float altitude;
  float accelX, accelY, accelZ;
  float gyroX, gyroY, gyroZ;
  float temperature;
} sensorData;

void setup() {
  // Start serial communication for all sensors
  Serial.begin(115200);
  
  // GPS module initialization
  GPS_Serial.begin(9600, SERIAL_8N1, rxPin, txPin);
  
  // Barometer (BMP388) initialization
  if (!bmp.begin_I2C()) {
    Serial.println("BMP388 not found.");
    while (1);
  }
  bmp.setTemperatureOversampling(BMP3_OVERSAMPLING_8X);
  bmp.setPressureOversampling(BMP3_NO_OVERSAMPLING);
  bmp.setIIRFilterCoeff(BMP3_IIR_FILTER_COEFF_3);
  bmp.setOutputDataRate(BMP3_ODR_50_HZ);
  
  // Gyroscope (MPU6050) initialization
  if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050.");
    while (1);
  }
  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

  radio.begin();
  radio.openWritingPipe(address);
  radio.setPALevel(RF24_PA_LOW);
  radio.stopListening();
}

void loop() {
  // GPS Data
  while (GPS_Serial.available() > 0) {
    gps.encode(GPS_Serial.read());
    if (gps.location.isUpdated()) {
      sensorData.latitude = gps.location.lat();
      sensorData.longitude = gps.location.lng();
      sensorData.speed = gps.speed.mph();
    }
  }

  // Barometer (BMP388) 
  if (!bmp.performReading()) {
    sensorData.pressure = bmp.pressure/100.0;
    sensorData.altitude = bmp.readAltitude(SEALEVELPRESSURE_HPA) * 3.28084;
  }

  // Gyroscope (MPU6050)
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);
  
  sensorData.accelX = a.acceleration.x;
  sensorData.accelY = a.acceleration.y;
  sensorData.accelZ = a.acceleration.z;
  sensorData.gyroX = g.gyro.x;
  sensorData.gyroY = g.gyro.y;
  sensorData.gyroZ = g.gyro.z;
  sensorData.temperature = temp.temperature * 9.0/5.0 + 32.0;

  radio.write(&sensorData, sizeof(sensorData));
  delay(1000);  // Delay 1 second
}
